<style lang="scss">
    @font-face {
        font-family: 'xrn-icon';
        src: url('//at.alicdn.com/t/font_622270_g9mhazhfov42t9.ttf?t=1524810097667') format('truetype');
    }
    @font-face {
        font-family: "iconfont";
        src:url('data:application/x-font-woff;charset=utf-8;base64,') format('woff');
    }
    .xnr-icon {
        font-family: 'xrn-icon';
        font-size: 16px;
        font-style: normal;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
    }

    .icon-gouwuche:before { content: "\e614"; }

    .icon-dengdaifukuan:before { content: "\e60e"; }

    .icon-jushoucang:before { content: "\e643"; }

    .icon-tixing:before { content: "\e6cc"; }

    .icon-customer:before { content: "\e69f"; }

    .icon-wodekoudai:before { content: "\e624"; }

    .icon-shaixuan:before { content: "\e695"; }

    .icon-xianshimiaosha:before { content: "\e69c"; }

    .icon-shouye:before { content: "\e6a5"; }

    .icon-waimai:before { content: "\e6da"; }

    .icon-checked:before { content: "\e632"; }

    .icon-star-active:before { content: "\e630"; }

    .icon-scan:before { content: "\e612"; }

    .icon-back:before { content: "\e613"; }

    .icon-icon-test:before { content: "\e626"; }

    .icon-lianxiwomen:before { content: "\e72f"; }

    .icon-shijian:before { content: "\e62a"; }

    .icon-yuding:before { content: "\e603"; }

    .icon-ziyuan:before { content: "\e637"; }

    .icon-lianxijilu:before { content: "\e61f"; }

    .icon-wodehezuo:before { content: "\e615"; }

    .icon-select:before { content: "\e725"; }

    .icon-service:before { content: "\e727"; }

    .icon-gengduopintuan:before { content: "\e60f"; }

    .icon-dizhi:before { content: "\e610"; }

    .icon-meal:before { content: "\e6b1"; }

    .icon-del:before { content: "\e616"; }

    .icon-meishi:before { content: "\e608"; }

    .icon-xinxi:before { content: "\e622"; }

    .icon-home:before { content: "\e604"; }

    .icon-star:before { content: "\e60a"; }

    .icon-canting:before { content: "\e611"; }

    .icon-shangpin:before { content: "\e635"; }

    .icon-jiantouyou:before { content: "\e62d"; }

    .icon-daifukuan:before { content: "\e63f"; }

    .icon-daishouhuo:before { content: "\e640"; }

    .icon-weishiyong:before { content: "\e641"; }

    .icon-zhuanchu:before { content: "\e642"; }

    .icon-tuijian:before { content: "\e600"; }

    .icon-icon--:before { content: "\e71e"; }

    .icon-icon-:before { content: "\e617"; }

    .icon-cart:before { content: "\e6ea"; }

    .icon-jianjie:before { content: "\e601"; }

    .icon-pintuan:before { content: "\e61e"; }

    .icon-gerenzhongxinkaobei:before { content: "\e657"; }

    .icon-saoma-fuben:before { content: "\e627"; }

</style>

<script>
    import wepy from 'wepy'
    import 'wepy-async-function'


    export default class extends wepy.app {
        config = {
            pages: [
                'pages/index',
                'pages/productlist',
                'pages/shopDetails',
                'pages/payment',
                'pages/library',
                'pages/Brandlist',
                'pages/BrandDetails',
                'pages/member',
                'pages/couponInfo',
                'pages/discount',
                'pages/buyTogetherInfo',
                'pages/seckillInfo',
                'pages/memberInfo',
                'pages/orderInfo',
                'pages/logistics',
                'pages/paySuccess',
                'pages/collection'
            ],
            window: {
                backgroundTextStyle: 'light',
                navigationBarBackgroundColor: '#fff',
                navigationBarTitleText: 'WeChat',
                navigationBarTextStyle: 'black'
            }
        }

        globalData = {
            userInfo: null,
            extJson: null
        }

        constructor() {
            super()
            this.use('requestfix')
        }

        onLaunch() {
            this.testAsync()
            this.login()
            this.getExtJson()
        }

        sleep(s) {
            return new Promise((resolve, reject) => {
                setTimeout(() => {
                    resolve('promise resolved')
                }, s * 1000)
            })
        }

        async testAsync() {
            const data = await this.sleep(3)
        }

        getUserInfo(cb) {
            const that = this
            if (this.globalData.userInfo) {
                return this.globalData.userInfo
            }
            wepy.getUserInfo({
                success(res) {
                    that.globalData.userInfo = res.userInfo
                    cb && cb(res.userInfo)
                }
            })
        }
        getPhoneNumber(){
            wepy.request({
                url: `${this.extJson.api_host}/restapi/merchants/${this.extJson.merchant_id}`,
                data: {
                    config_id: this.extJson.config_id
                },
                success: (res) => {
                    const phoneNumber = res.data.data.phone || res.data.data.linkman_mobile
                    wepy.setStorageSync('phoneNumber', phoneNumber)
                }
            })
        }

        getExtJson(){ //获取第三方ext.json 中ext字段中的数据
            if(wepy.getExtConfigSync){ //低版本兼容检测
                this.extJson = wepy.getExtConfigSync()
            }
        }
        login(){ //调用微信登录并获取openid
            wx.login({
                success: (res) => {
                    if (res.code) {
                        //发起网络请求
                        wx.request({
                            url: `${this.extJson.api_host}/restapi/default/new-openid`,
                            data: {
                                config_id: this.extJson.config_id,
                                code: res.code
                            },
                            success: (d) => {
                                this.extJson.openid = d.data.data.openid
                                wx.setStorageSync('openid', d.data.data.openid);
                            }
                        })
                    } else {
                        console.log(`获取用户登录态失败！${res.errMsg}`)
                    }
                }
            })
        }

        getUserInfo(cb) { //获取用户信息 头像、昵称等

            if (this.globalData.userInfo) {
                return this.globalData.userInfo
            }
            wepy.getUserInfo({
                success: res => {
                    this.globalData.userInfo = res.userInfo
                    cb && cb(res.userInfo)
                }
            })
        }
    }
</script>
