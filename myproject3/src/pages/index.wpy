<style lang="scss">
    .carousel {
        width: 100%;
        height: 422rpx;
        .section_img {
            width: 94%;
            margin: 10rpx auto 20rpx;
            text-align: center;
            .sec_img {
                width: 100%;
                height: 98rpx;
                margin: 0 auto;
            }
        }
        .partition {
            width: 710rpx;
            height: auto;
            display: inline-block;
            margin: auto 20rpx 40rpx;
        }
    }

    .shop {
        .goods_list {
            padding: 0 30rpx 16rpx;
            border-bottom: 10rpx solid #ededed;
        }
    }

    .scroll_tab {
        margin-bottom: 28rpx;
    }

    .active-c {
        width: 9rpx;
        height: 8rpx;
        background: #fff;
        border-radius: 50%;
        margin: 0 7rpx;
        transition: .4s;
    }

    .active-a {
        width: 15rpx;
        height: 5rpx;
        border-radius: 10rpx;

    }
</style>

<template>
    <view class="carousel">
        <!--导航分类-->
        <scroll-tab
                :labelData.sync="labelData"
                :animate.sync="animate"
                :defaultIndex.sync="defaultIndex"
                @tabchange.user="tabChange"
        ></scroll-tab>

        <!-- 轮播图 -->
        <carousel :carouselConfig.sync="carouselConfig"></carousel>

        <!--活动-->
        <activity :activity.sync="activity"></activity>

        <!--广告-->
        <view class="section_img" @tap="bannerImg" wx:for="{{sectionImg}}" wx:key="{{index}}" data-url="{{item.page}}">
            <image class="sec_img" mode="widthFix" src="{{item.iurl}}"></image>
        </view>

        <!--区域-->
        <view class="partition">
            <partition :goodsClass.sync="goodsClass"></partition>
        </view>

        <!-- 推荐商品 -->
        <view class="shop">
            <repeat for="{{goodsListConfig}}" item="item" index="index" key="key">
                <goodsList :goodsListConfig.sync="item">
                    <view slot="title">
                        {{item.title}}
                    </view>
                </goodsList>
            </repeat>
        </view>
    </view>
</template>
<script>
    import wepy from 'wepy'
    import Carousel from 'xnr-swiper'
    import getExtJson from '../assets/getExtJson'
    import GoodsList from '../components/GoodsList'
    import Partition from '../components/Partition'
    import Scrolltoptab from 'xnr-scroll-top-tab'
    import Activity from '../components/Activity'

    export default class extends wepy.page {
        components = {
            carousel: Carousel,
            goodsList: GoodsList,
            partition: Partition,
            'scroll-tab': Scrolltoptab,
            activity: Activity
        }
        data = {
            sectionImg: [],
            carouselConfig: {
                imgUrls: [],
                dotsPosition: 'center',
                dotsActiveClass: 'active-a',
                dotsClass: 'active-c',
            },
            goodsListConfig: [],
            goodsClass: [],
            labelData: [],
            animate: false,
            defaultIndex: 0,
            activity: []
        }

        getListDataPromise(index) {
            index = index || 0
            new Promise((resolve, reject) => {
                wepy.request({
                    url: `${this.api_host}/restapi/goods`,
                    data: {
                        config_id: 634,
                        page: 1,
                        per_page: this.flag[index].num,
                        flag: this.flag[index].flag,
                        status: 1
                    },
                    success: (res) => {
                        const data = res.data.data.items.map((item, inx) => {
                            return {
                                imgUrl: item.thumb.indexOf('http') > -1 ? item.thumb : `${this.img_host}${item.thumb}`,
                                title: item.name,
                                details: '',
                                model: this.flag[index].style[inx] || 'small',
                                market_price: item.market_price,
                                price: item.price,
                                id: item.id
                            }
                        })
                        let obj = {
                            id: this.flag[index].flag,
                            title: this.flag[index].tag,
                            listData: data
                        }
                        this.goodsListConfig.push(obj)
                        resolve(++index)
                        this.$apply()
                    }
                })
            }).then(index => {
                if (index < this.flag.length) {
                    this.getListDataPromise(index)
                }
            })
        }
        getCategoryTitle(){
            wepy.request({
                url: `${this.api_host}/restapi/goods-category`,
                data: {
                    config_id: this.config_id,
                    type: 0
                },
                success: res => {
                    if(res.data.success){
                        res.data.data.items.forEach( item => {
                            if(item.level == 0){
                                this.labelData.push({
                                    title: item.name,
                                    id: item.id
                                })
                            }
                        })
                        this.labelData.unshift({
                            title: '全部',
                            id: ''
                        })
                        for (let i = 0, I = this.labelData.length; i < I; i++) {
                            if(this.labelData[i].id == this.viewId){
                                this.defaultIndex = i
                                this.$apply()
                                break
                            }
                        }
                        this.$apply()
                    }

                }
            })
        }
        methods = {
            bannerImg(e) {
                let url=e.currentTarget.dataset.url
                wx.navigateTo({
                    url: `${url}`,
                    fail: res => {
                        wx.switchTab({
                            url: `${url}`
                        })
                    }
                })
            }
        }

        onLaunch() {
        }

        // 获取菜单数据
        getMenu(data) {
            if (wx.getExtConfig) {
                wx.getExtConfig({
                    success: (res) => {
                        // pages/article
                        const menu = this.menu.map((item) => {
                            let url = item.page.split('?')
                            let obj
                            if (url[1]) {
                                obj = {}
                                let key = url[1].split('=')[0]
                                let val = url[1].split('=')[1]
                                obj[key] = val
                            }
                            return {
                                imgUrl: `${this.img_host}${item.icon}`,
                                navText: item.name,
                                navTo: url[0],
                                query: obj
                            }
                        })
                        menu && (this.navConfig = menu)
                        this.$apply()
                    }
                })
            }
        }

        // 轮播图数据请求
        getCarousel() {
            wx.request({
                url: `${this.api_host}/restapi/wechat-focus`,
                data: {
                    config_id: this.config_id,
                    belongs: 1,
                    type: 0
                },
                success: (res) => {
                    const data = res.data.data.map((item) => {
                        return `${this.img_host}${item.image}`
                    })
                    this.carouselConfig.imgUrls = data
                    this.$apply()
                }
            })
        }

        onLoad() {
            getExtJson.call(this)
            /*
      * 通过ext.json传入的swiper 数据 修改轮播图的样式
      * */
            if (this.swiper) {
                for (let i in this.swiper) {
                    this.carouselConfig[i] = this.swiper[i]
                }
            }
            this.getMenu()
            this.getListDataPromise()
            this.getCarousel()
            this.getCategoryTitle()
            this.goodsClass.forEach((item) => {
                item.icon = `${this.img_host}${item.icon}`
            })

            this.sectionImg.forEach((item) =>{
                item.iurl=`${this.img_host}${item.iurl}`

            })

            this.activity.forEach((item) =>{
                item.iurl=`${this.img_host}${item.iurl}`
            })

            console.log(this)
            this.$apply();
        }

    }
</script>
