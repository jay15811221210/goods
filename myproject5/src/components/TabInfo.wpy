
<style lang="scss">
    .tabInfo{
        &_wrap{
            overflow: hidden;
            height: 100%;
        }
        &_overflow{
            display: flex;
            flex-wrap: wrap;
            overflow: hidden;
        }
        &_item{
            width: 33.33%;
            font-size: 32rpx;
            text-align: center;
            flex-shrink: 0;
            background: #fff;
            border:{
                left: 1px solid #ccc;
                bottom: 1px solid #ccc;
            };
            margin-bottom: -1px;
            margin-top: 1px;
            box-sizing: border-box;
        }
        &_item:nth-of-type(3n + 1){
            border-left: 0;
        }
        &_icon{
            width: 100%;
            height: 200rpx;
            box-sizing: border-box;
            padding: 12rpx;
            padding-bottom: 0;
            background: {
                size: cover;
                position: center;
                clip: content-box;
            }
        }
        &_name{
            font-size: 28rpx;
            line-height: 48rpx;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }
    }
</style>

<template>
    <scroll-view scroll-y="true" class="tabInfo_wrap">
        <view class="tabInfo_overflow">
            <repeat for="{{tabListConfig}}">
                <view class="tabInfo_item" id="{{item.id}}" data-name="{{item.name}}" @tap="goTo">
                    <view class="tabInfo_icon" style="background-image: url({{item.icon}})"></view>
                    <view class="tabInfo_name">{{item.name}}</view>
                </view>
            </repeat>
        </view>
    </scroll-view>
</template>

<script>

    import wepy from 'wepy'

    export default class TabInfo extends wepy.component{
        props = {
            tabListConfig: {
                type: Array,
                coerce: (res) => {
                    return res
                }
            }
        }
        watch = {
            tabListConfig(newVal){
                
            }
        }
        methods = {
            goTo(e){
                const name = e.currentTarget.dataset.name
                this.$emit('goTo', e.currentTarget.id, name)
            }
        }
    }
    
</script>


